- Creamos proyecto sieteymedio según las instrucciones pdf 03b
	- Creamos proyecto java en visual code:
		- Cremos projecto java + no build tools + nombre
	- Creamos paquetes
		- nuevas carpetas bajo src
			- recursos y sieteymedia

	- Confirmamos que funciona
		Método main está en sieteymedia/GameControler.java
			al ejecutar con Run Code da error
			Al ejecutar con Run Java está correcto
				& 'C:\Program Files\Eclipse Foundation\jdk-11.0.12.7-hotspot\bin\java.exe' 
				'-cp' 'C:\Users\it-ra\AppData\Roaming\Code\User\workspaceStorage\fb37821f29ed83b69b9206af9ea7783c\redhat.java\jdt_ws\dam_prog_ev1x3_2capas_99d4d751\bin' 
				'sieteymedia.GameControler' 

- Instrucciones
	Observa que la clase GameControler mezcla la lógica de negocio y la lógica de presentación, y por lo tanto, 
	claramente no cumple el principio de responsabilidad única.

	SE PIDE: Reestructurar el proyecto SieteYMedia con las siguientes clases y paquetes.
		- recursos
			Baraja.java
			Carta.java
			Palo.java
		- sieteymedia
			InterfaceConsola.java
			SieteYMedia.java

	l paquete recursos es el mismo. El paquete sieteymedia es lo que tienes que
	escribir de forma que haga exactamente lo mismo que Gamecontroler.java pero
	ahora repartiendo el trabajo y responsabilidad de GameControler en dos clases:
		
		● SieteYMedia.java se ocupe de la lógica de negocio
		● InterfaceConsola de la lógica de presentación.
	
	Para conseguir el efecto deseado observa que:
	
	1. La aplicación ahora es más compleja, se divide una clase en dos y surgen
	nuevos métodos necesarios para la comunicación entre ellas. ¿Merece la
	pena?. Vamos a suponer que sí porque queremos hacer más adelante de
	este juego su versión gráfica, de esta manera sólo tendremos que volver a
	escribir la Interface

	2. El teclado y la pantalla sólo los maneja InterfaceConsola. ¡ni un println ni
	un Scanner en SieteYMedia!

	3. ¿Cómo devuelve los datos SieteYMedia a InterfaceConsola?. Supongamos
	que InterfaceConsola quiere imprimir las cartas que tiene en un momento
	dado el Jugador ¿Cómo le pasa SieteYMedia esta información a
	interfaceConsola?.
	SieteYMedia puede devolver un simple String para que lo imprima 
	InterfaceConsola o bien una estructura más compleja como un array de cartas.
	La primera es muy sencilla y clara pero la segunda es más flexible ya que no 
	limita a InterfaceConsola a imprimir un String concreto. Usa la segunda.

	4. Otra cuestión importante en la comunicación entre clases es que 
	InterfaceConsola tiene que preguntar a SieteYMedio si se acabó o no 
	la partida.

	FORMATO DE ENTREGA: En tarea moodle que se abrirá a la vuelta de vacaciones
	se subirán dos ficheros pdf:
		● InterfaceConsola.pdf que contiene el código de tu solución para la clase
		InterfaceConsola
		● SieteYMedia.pdf, lo mismo para la clase SieteYMedia

	En estos ficheros se va a observar simplemente que se cumple la arquitectura a
	dos capas, no que la lógica de funcionamiento es correcta, de todas formas,
	procura que funcione bien pues es muy probable que este ejercicio tenga una
	segunda parte ampliada.